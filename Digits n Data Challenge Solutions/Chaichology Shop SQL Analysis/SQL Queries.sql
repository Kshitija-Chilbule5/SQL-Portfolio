-- 1) Lists all tea shop details ?
SELECT * FROM tea_shops;

-- 2. Find Menu Items Available in the Shop?
SELECT DISTINCT item_name FROM menu_items;

-- 3) Find the Total Number of Orders for Each Menu Item ?
SELECT mi.item_id, mi.item_name, SUM(s.quantity) AS total_units_sold
FROM sales s
JOIN menu_items mi ON s.item_id = mi.item_id
GROUP BY mi.item_id, mi.item_name
ORDER BY total_units_sold DESC;

-- 4) Find the Total Revenue Generated by Each Shop in different Locations ?
SELECT ts.city, SUM(s.quantity * mi.price) AS Revenue
FROM sales s 
JOIN menu_items mi ON s.item_id = mi.item_id
JOIN tea_shops ts ON s.shop_id = ts.shop_id
GROUP BY ts.shop_id, ts.shop_name, ts.city
ORDER BY Revenue DESC;

-- 5) Find the Best-Selling Item ?
SELECT mi.item_name, SUM(s.quantity) AS total_quantity_sold
FROM sales s
JOIN menu_items mi ON s.item_id = mi.item_id
GROUP BY mi.item_name
ORDER BY total_quantity_sold DESC
LIMIT 1;

-- 6) Count the Total Number of Ratings for Each Shop ?
SELECT ts.shop_id, ts.shop_name, SUM(r.rating_id) AS total_ratings
FROM tea_shops ts
JOIN ratings r ON ts.shop_id = r.shop_id
GROUP BY ts.shop_id
ORDER BY total_ratings DESC;

-- 7) List All Shops with an Average Rating Above 4.5 ?
SELECT ts.shop_id, ts.shop_name, AVG(r.rating) AS avg_rating
FROM tea_shops ts
JOIN ratings r ON ts.shop_id = r.shop_id
GROUP BY ts.shop_id, ts.shop_name
HAVING avg_rating > 4.5
ORDER BY avg_rating DESC;

-- 8) Find reviews where customers used the word “amazing” for a shop in Bangalore ?
SELECT r.review
FROM ratings r
JOIN tea_shops ts ON r.shop_id = ts.shop_id
WHERE ts.city = 'Bangalore' AND r.review LIKE '%amazing%';

-- 9) Find the names of customers who had Masala Chai and identify the tea shop where they consumed it ?
SELECT DISTINCT ts.shop_id, r.customer_name, ts.shop_name
FROM sales s
JOIN menu_items mi ON s.item_id = mi.item_id
JOIN tea_shops ts ON s.shop_id = ts.shop_id
JOIN ratings r ON ts.shop_id = r.shop_id
WHERE mi.item_name = 'Masala Chai';

-- 10) Find the day with the most sales ?
SELECT transaction_date, SUM(quantity) AS total_quantity_sold
FROM sales
GROUP BY transaction_date
ORDER BY total_quantity_sold DESC
LIMIT 1;

